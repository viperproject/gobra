// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

// this testcase checks whether a domain can implement an interface

package ImplementsInterfaceSimple01

ghost type intPair domain {
    func fst(intPair) int
    func snd(intPair) int
    func pair(int, int) intPair

    axiom {
      forall p intPair :: {fst(p)}{snd(p)} p == pair(fst(p),snd(p))
    } // pair

    axiom {
      forall l, r int :: {pair(l,r)} l == fst(pair(l,r)) && r == snd(pair(l,r))
    }
}

// the following clause should be permitted by the type-checker:
intPair implements any

func test() {
    x := pair(1,2)
    assert equal(x, x) // succeeds as `equal` is ghost
    //:: ExpectedOutput(assert_error:assertion_error)
    assert false
}

ghost
decreases
requires isComparable(a)
pure func equal(a, b any) bool {
    return a == b
}
