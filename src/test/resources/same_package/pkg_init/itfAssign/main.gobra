// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

dup pkgInvariant false

package main

// ##(-I ./)
import "defs"

// var e error = T{}

// var _ error = T{}

decreases
func (t T) Error() string

func init() {
	initFun1()
}

// var _ defs.I = (*T)(nil)

type T struct{}

type ItfPkg interface {
	decreases
	F()
}

// func bla() {
// 	var _ defs.I = (*T)(nil)
// }

// this should be disallowed due to the right hand side, provide better error messages
// var e = defs.I((*T)(nil))

ensures false
decreases
func (t T) F() {
	openDupPkgInv
	assert false
}

// TODO: check that there cannot be a var _ T = illegal expr that calls interface defined on this type

mayInit
ensures false
decreases
func initFun1() {
	// this assignment is disallowed, otherwise
	// one may use it to open an invariant that
	// does not yet hold.
	// var i defs.I = T{}
	// i.F()
}

mayInit
ensures false
decreases
func initFun2() {
	// for the same reason, this cast
	// must be rejected
	// var i = defs.I(T{})
	// i.F()
}

mayInit
decreases
func initFun3() {
	var i ItfPkg = T{}
	i.F()
}