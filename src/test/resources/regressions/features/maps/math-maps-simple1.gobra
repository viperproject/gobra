// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package mathmaps

func test1() {
	// mathematical map literals, a.k.a dictionaries
	m1 := dict[string]int{ "hello": 5, "bye": 3 }

	// indexed mathematical map
	assert m1["hello"] == 5
	assert m1["bye"] == 3

	// mathematical map update
	m2 := m1["hello" = 1, "m" = 1]
	assert m2["bye"] == 3
	assert m2["hello"] == 1
	assert m2["m"] == 1

	// mathematical map length (size of the domain, same as regular maps)
	assert len(m2) == 3
	assert len(dict[int]int{}) == 0

	// domain and range obtain the set of keys and values, respectively
	assert len(domain(m2)) == 3
	assert !("Y" in domain(m2))
	assert 5 in range(m1)

	// map update via assignment
	m1["Y"] = 1
	assert m1["Y"] == 1

	// mathematical map equality
	assert m1 != m2
}

// tests conversions from actual maps to dictionaries
requires acc(m)
requires 5 in domain(m)
requires !(8 in domain(m))
func test2(m map[int]int) {
	ghost var y = dict(m)
	assert 5 in domain(y)
	assert !(8 in domain(m))
}