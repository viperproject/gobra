// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package GhostPointerReceiverSimple01

type Foo struct {
    field int
}

ghost
decreases
preserves acc(p)
func GhostFunc(p *Foo) {
    gp := &Foo{ 42 }
    gp.GhostPointerReceiver()

    (*p).GhostNonPointerReceiver()
    // p is implicitly dereferenced:
    p.GhostNonPointerReceiver()
    (*gp).GhostNonPointerReceiver()
    // gp is implicitly dereferenced:
    x := gp.GhostNonPointerReceiver()
}

decreases
preserves acc(p)
func ActualFunc(p *Foo) {
    p.ActualPointerReceiver()
    (*p).GhostNonPointerReceiver()
    // *p is implicitly referenced:
    (*p).ActualPointerReceiver()
    // p is implicitly dereferenced:
    p.ActualNonPointerReceiver()
    //:: ExpectedOutput(assert_error:assertion_error)
    assert false
}

ghost
decreases
preserves acc(r)
func (r gpointer[Foo]) GhostPointerReceiver() int {
    r.field = 0
    return r.field
}

decreases
preserves acc(r)
func (r *Foo) ActualPointerReceiver() int {
    r.field = 0
    return r.field
}

ghost
decreases
func (r Foo) GhostNonPointerReceiver() int {
    r.field = 42
    return r.field
}

decreases
//:: ExpectedOutput(postcondition_error:assertion_error)
ensures r.field == 42
func (r Foo) ActualNonPointerReceiver() int {
    r.field = 42
    return r.field
}
