// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in https://golang.org/LICENSE

// This package is imported implicitly in every other package.
// Because Go does not allow cyclic import relations, files in
// this package cannot have imports.

package builtin

type any = interface{}

type error interface {
	// To allow for recursive implementations of the
	// following methods, we use ErrorMem() as the
	// termination measure.
	pred ErrorMem()

	ghost
	requires  acc(ErrorMem(), _)
	pure IsDuplicableMem() bool

	ghost
	preserves ErrorMem()
	ensures   IsDuplicableMem() == old(IsDuplicableMem())
	ensures   IsDuplicableMem() ==> ErrorMem()
	Duplicate()

	preserves ErrorMem()
	ensures   IsDuplicableMem() == old(IsDuplicableMem())
	Error() string
}

// The panic built-in function stops normal execution of the current
// goroutine. Because Gobra does not support defer statements yet,
// a panic is modeled as an unrecoverable error in the program and
// a correct program must never call it.
requires false
func panic(v interface{})
