// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package pkg

decreases
func foo() {
	x := []uint{1, 2, 3}
	y := []uint{0, 0, 0}
	z := []int{0, 0}
	max := x[0]
	invariant acc(x)
	invariant acc(y)
	invariant acc(z)
	invariant 0 <= z[1] && z[1] <= len(x)
	invariant forall k int :: 0 <= k && k < z[1] ==> max >= x[k]
	invariant 0 <= z[1] && z[1] < len(x) ==> x[z[1]] == y[2]
	decreases len(x) - z[1]
	for z[1], y[2] = range x {
		if y[2] > max {
			max = y[2]
		}
	}
	assert forall i int :: 0 <= i && i < len(x) ==> max >= x[i]
}


func foo2() {
	x := []uint{1, 2, 3}
	var i uint
	var j int
	invariant acc(x)
	decreases len(x) - j
	for j, _ = range x {
	}
	invariant acc(x)
	for _ = range x {
	}
	invariant acc(x)
	for _, i = range x {
	}
	invariant acc(x)
	for j = range x {
	}
}
