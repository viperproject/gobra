// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package closureRefineInterface

type I1 interface {
    ensures r % 2 == 0
    pure f(n int) (r int)
}

type S1 struct{ x int }

pure func (self S1) f(n int) int {
    return 2*n + 2*self.x
}

ghost
ensures r >= 2*n && r % 2 == 0
pure func more(n int) (r int)

requires i != nil && i.f implements more
ensures r == i.f(a) as more + 2
func hof(i I1, a int) (r int) {
    r = i.f(a) as more
    assert r >= 2*a && r % 2 == 0
    return r + 2
}

func main() {
    proof S1{10}.f implements more {
        return S1{10}.f(n)
    }

    r := hof(S1{10}, 4)
    assert r >= 10 && r % 2 == 0
}