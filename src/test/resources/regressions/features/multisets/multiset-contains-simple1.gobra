// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package pkg

func example1(ghost x int, ghost m mset[int]) {
  ghost var b bool
  b = x elem m
}

func example2(ghost x int, ghost m1 mset[int], ghost m2 mset[bool]) {
  ghost var b bool
  b = x elem m1 elem m2
  assert x elem m1 elem m2 == (x elem m1) elem m2
}

func example3() {
  assert 2 elem mset[int] { 1, 2, 3 }
  assert !(2 elem mset[int] { 1, 3 })
  assert 2 elem mset[int] { 1, 2, 2, 2, 3 }
  assert 1 elem mset[int] { 1 } elem mset[bool] { true } elem mset[bool] { true, false }
}

func example4(ghost x int) {
  assert !(x elem mset[int] { } elem mset[bool] { } elem mset[bool] { } elem mset[bool] { })
}

func example5(ghost x int, ghost m1 mset[int], ghost m2 mset[int]) {
  assert x elem m1 ==> x elem m1 union m2
  assert x elem m2 ==> x elem m1 union m2

  assert x elem m1 intersection m2 ==> x elem m1
  assert x elem m1 intersection m2 ==> x elem m2
}

ensures x elem m1 union m2 ==> x elem m1 || x elem m2
func example6(ghost x int, ghost m1 mset[int], ghost m2 mset[int]) {
}

requires m1 subset m2
func example7(ghost x int, ghost m1 mset[int], ghost m2 mset[int]) {
  assert x elem m1 ==> x elem m2
}
