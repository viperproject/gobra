// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package pkg

type Pair struct {
  Left, Right, p int
}

//test for proof statement with struct
requires acc(x) && x.Left == 2 
ensures  acc(x) && x.Left == 2
private {
  requires acc(x) && x.Left == 2
  ensures  acc(x) && x.Left == 2 && x.p == 3
  proof {
    Foo(x)
  }
}
func Foo(x *Pair) {
  x.Left = 2
  x.p = 3
} 

//test for proof statement
requires a == 0
ensures a == 0
private {
  requires a == 0
  ensures a == 0
  proof {
    F(a)
  }
}
func F(a int) {}

//test return statement in proof
requires a == 0
ensures a == 0
private {
  requires a == 0
  ensures a == 0
  proof {
    r = F2(a)
  }
}
func F2(a int) (r int) { 
  return a
}

// public function, no private spec
requires a == 0
ensures a == 0
func F3(a int) (r int) {
  return a
}


pred P(a int) {
  a == 0
}

// public function, predicates
requires P(a)
ensures P(a)
private {
  requires a == 0
  ensures a == 0
  proof {
    unfold P(a)
    FPred(a)
    fold P(a)
  }
}
func FPred(a int)

pred p(a int) {
  a == 0
}

requires P(a)
ensures P(a)
private {
  requires P(a)
  ensures P(a)
  proof FPred2 {
    FPred2(a)
  }
}
func FPred2(a int) 


