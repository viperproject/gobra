// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package trivial

type Tree struct {
  Left  *Tree
  Value int
  Right *Tree
}

pred tree(self *Tree) {
  acc(&self.Left) && acc(&self.Value) && acc(&self.Right) &&
  (self.Left != nil ==> tree(self.Left)) &&
  (self.Right != nil ==> tree(self.Right))
}

requires self != nil ==> tree(self)
pure func (self *Tree) Contains(v int) bool {
  return self != nil && (unfolding tree(self) in self.Value == v || (self.Left.Contains(v) || self.Right.Contains(v)))
}

requires tree(self) && !self.Contains(v)
func (self *Tree) deleteLeftMost(ghost v int) (res *Tree, leftMost int) {
    unfold tree(self)

    res, leftMost = self.Right, self.Value // test assertion
    return res, leftMost
}
