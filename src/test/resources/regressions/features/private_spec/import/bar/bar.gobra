// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package bar

type Pair struct {
  Left, Right, p int
}

type pair struct {
  Left, Right, p2 int
}

func Foo5() *pair
func Foo4(p *pair) int

requires acc(p)
pure func (p *Pair) GetP() int {
  return p.p
}

const g int = 2
const G int = 42

var s int = 2
var S int = 42

//private function with struct (private specification and proof)
requires acc(x) && x.Left == 2
ensures  acc(x) && x.Left == 2
private {
  requires acc(x) && x.Left == 2
  ensures  acc(x) && x.Left == 2 && x.p == 3
  proof {
    Foo(a, b, x)
  }
}
func Foo(a, b int, x *Pair)

ensures acc(r) && r.Left == a && r.Right == b
func Getx(a, b, c int) (r *pair) {
  return &pair{Left: a, Right: b, p2: c}
}

requires acc(x) && x.Left == 2 && x.Right == 2
ensures  acc(x) && x.Left == 2 && x.Right == 2
private {
  requires acc(x) && x.Left == 2 && x.Right == 2
  ensures  acc(x) && x.Left == 2 && x.Right == 2 && x.p2 == 3
  proof {
    Foo2(a, b, x)
  }
}
func Foo2(a, b int, x *pair)

requires acc(x) && x.Left == 2 
ensures  acc(x) && x.Left == 2 
private {
  requires acc(x) && x.Left == 2 
  ensures  acc(x) && x.Left == 2 && x.p2 == 3
  proof {
    foo3(a, b, x)
  }
}
func foo3(a, b int, x *pair)


pred P(a int) {
  a == 0
}

requires P(a)
ensures P(a)
private {
  requires a == 0
  ensures a == 0
  proof {
    unfold P(a)
    FPred(a)
    fold P(a)
  }
}
func FPred(a int)

pred p(a int) {
  a == 0
}

requires P(a)
ensures P(a)
private {
  requires a == 0
  ensures a == 0
  proof {
    unfold P(a)
    FPred2(a)
    fold P(a)
  }
}
func FPred2(a int) 

pure func PF(a int) int {
  return a
}

pure func pf(a int) int {
  return a
}