// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package invallinstances

pred PkgInv() {
	acc(&ids) &&
	acc(&allocs) &&
	(forall c *Client :: { c in allocs } c in allocs ==>
		acc(&c.id, 1/2)) &&
	(forall c *Client :: { c in allocs } c in allocs ==>
		c.id < ids) &&
	(forall c1, c2 *Client :: { c1 in allocs, c2 in allocs } c1 in allocs && c2 in allocs && c1 != c2 ==>
		c1.id != c2.id)
}

ghost
requires acc(PkgInv(), _)
decreases
pure func (c *Client) Allocated() bool {
	return unfolding acc(PkgInv(), _) in
		c in allocs
}

pred (c *Client) Inv() {
	acc(&c.id, 1/2) &&
	acc(&c.name)
}

ghost
requires acc(c.Inv(), _)
decreases
pure func (c *Client) Id() int {
	return unfolding acc(c.Inv(), _) in
		c.id
}


ghost
preserves acc(PkgInv(), 1/4)
preserves c1.Inv() && c2.Inv()
preserves c1.Allocated() && c2.Allocated()
ensures   c1.Id() != c2.Id()
decreases
func TwoDiffInstancesHaveDiffIds(c1 *Client, c2 *Client) {
	assert unfolding acc(PkgInv(), 1/4) in
		unfolding c1.Inv() in
		unfolding c2.Inv() in
		c1.id != c2.id
}